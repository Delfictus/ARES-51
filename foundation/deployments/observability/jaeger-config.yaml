apiVersion: v1
kind: Namespace
metadata:
  name: observability
  labels:
    name: observability
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: ares-observability
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jaeger-config
  namespace: observability
data:
  jaeger.yaml: |
    receivers:
      jaeger:
        protocols:
          grpc:
            endpoint: 0.0.0.0:14250
          thrift_http:
            endpoint: 0.0.0.0:14268
          thrift_compact:
            endpoint: 0.0.0.0:6831
          thrift_binary:
            endpoint: 0.0.0.0:6832
      zipkin:
        endpoint: 0.0.0.0:9411
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318

    processors:
      batch:
        timeout: 1s
        send_batch_size: 1024
        send_batch_max_size: 2048
      memory_limiter:
        limit_mib: 512
        check_interval: 5s
      resource:
        attributes:
        - key: service.name
          value: ares-chronofabric
          action: upsert
        - key: service.version
          value: "1.0.0"
          action: upsert
        - key: deployment.environment
          value: production
          action: upsert

    exporters:
      jaeger:
        endpoint: jaeger-collector.observability.svc.cluster.local:14250
        tls:
          insecure: true
      prometheus:
        endpoint: "0.0.0.0:8889"
        metric_expiration: 180m
        enable_open_metrics: true
      elasticsearch:
        endpoints: 
          - "http://elasticsearch.observability.svc.cluster.local:9200"
        index: jaeger-spans
        mapping:
          index_patterns: "jaeger-spans-*"
          settings:
            number_of_shards: 3
            number_of_replicas: 1
          mappings:
            properties:
              traceID:
                type: keyword
              spanID:
                type: keyword
              operationName:
                type: keyword
              startTime:
                type: date
              duration:
                type: long
              tags:
                type: object
                dynamic: true

    service:
      pipelines:
        traces:
          receivers: [jaeger, zipkin, otlp]
          processors: [memory_limiter, resource, batch]
          exporters: [jaeger, elasticsearch]
        metrics:
          receivers: [prometheus]
          processors: [memory_limiter, resource, batch]
          exporters: [prometheus]

    extensions:
      health_check:
        endpoint: 0.0.0.0:13133
      pprof:
        endpoint: 0.0.0.0:1777
      zpages:
        endpoint: 0.0.0.0:55679

  quantum-enhancement.yaml: |
    # ARES ChronoFabric Quantum Trace Enhancement Configuration
    quantum_tracing:
      enabled: true
      coherence_tracking:
        enabled: true
        minimum_coherence_threshold: 0.85
        decoherence_alert_threshold: 0.7
        measurement_interval_ms: 100
      
      entanglement_tracking:
        enabled: true
        max_entangled_operations: 1000
        entanglement_timeout_seconds: 3600
        strength_decay_rate: 0.001
      
      temporal_correlation:
        enabled: true
        max_temporal_window_seconds: 300
        causality_analysis: true
        paradox_detection: true
        femtosecond_precision: true
      
      quantum_metrics:
        - name: quantum.coherence_ratio
          type: gauge
          description: "Current quantum coherence level"
          unit: ratio
          quantum_specific: true
        
        - name: quantum.entanglement_count
          type: counter
          description: "Number of active entanglements"
          unit: count
          quantum_specific: true
        
        - name: quantum.gate_operation_duration
          type: histogram
          description: "Quantum gate operation execution time"
          unit: nanoseconds
          buckets: [100, 500, 1000, 5000, 10000, 50000]
          quantum_specific: true
        
        - name: quantum.temporal_accuracy
          type: gauge
          description: "Temporal coordinate accuracy"
          unit: ratio
          quantum_specific: true
        
        - name: quantum.decoherence_events
          type: counter
          description: "Number of decoherence events detected"
          unit: count
          quantum_specific: true

      alert_rules:
        - name: QuantumCoherenceDropped
          expression: quantum.coherence_ratio < 0.85
          severity: warning
          for: 30s
          description: "Quantum coherence has dropped below acceptable threshold"
        
        - name: CriticalCoherenceLoss
          expression: quantum.coherence_ratio < 0.5
          severity: critical
          for: 5s
          description: "Critical quantum coherence loss detected"
        
        - name: TemporalAnomalyDetected
          expression: increase(temporal.anomaly_count[5m]) > 0
          severity: warning
          for: 10s
          description: "Temporal anomaly detected in quantum operations"
        
        - name: BootstrapParadoxRisk
          expression: bootstrap.paradox_risk > 0.8
          severity: critical
          for: 1s
          description: "High risk of bootstrap paradox detected"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger-collector
  namespace: observability
  labels:
    app: jaeger
    component: collector
spec:
  replicas: 3
  selector:
    matchLabels:
      app: jaeger
      component: collector
  template:
    metadata:
      labels:
        app: jaeger
        component: collector
    spec:
      serviceAccountName: jaeger
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: jaeger-collector
        image: jaegertracing/jaeger-collector:1.50
        args:
        - "--config-file=/etc/jaeger/jaeger.yaml"
        - "--es.server-urls=http://elasticsearch.observability.svc.cluster.local:9200"
        - "--es.num-shards=3"
        - "--es.num-replicas=1"
        ports:
        - containerPort: 14268
          name: thrift-http
        - containerPort: 14250
          name: grpc
        - containerPort: 9411
          name: zipkin
        - containerPort: 4317
          name: otlp-grpc
        - containerPort: 4318
          name: otlp-http
        - containerPort: 13133
          name: health
        env:
        - name: SPAN_STORAGE_TYPE
          value: "elasticsearch"
        - name: ES_SERVER_URLS
          value: "http://elasticsearch.observability.svc.cluster.local:9200"
        - name: ES_INDEX_PREFIX
          value: "jaeger"
        - name: COLLECTOR_OTLP_ENABLED
          value: "true"
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: "0.0.0.0:9411"
        resources:
          requests:
            memory: 1Gi
            cpu: 500m
          limits:
            memory: 2Gi
            cpu: 1
        volumeMounts:
        - name: jaeger-config
          mountPath: /etc/jaeger
        livenessProbe:
          httpGet:
            path: /
            port: 13133
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 13133
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: jaeger-config
        configMap:
          name: jaeger-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger-query
  namespace: observability
  labels:
    app: jaeger
    component: query
spec:
  replicas: 2
  selector:
    matchLabels:
      app: jaeger
      component: query
  template:
    metadata:
      labels:
        app: jaeger
        component: query
    spec:
      serviceAccountName: jaeger
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: jaeger-query
        image: jaegertracing/jaeger-query:1.50
        args:
        - "--es.server-urls=http://elasticsearch.observability.svc.cluster.local:9200"
        - "--es.num-shards=3"
        - "--es.num-replicas=1"
        - "--query.static-files=/go/jaeger-ui/"
        - "--query.ui-config=/etc/jaeger/ui-config.json"
        ports:
        - containerPort: 16686
          name: query
        - containerPort: 16687
          name: admin
        env:
        - name: SPAN_STORAGE_TYPE
          value: "elasticsearch"
        - name: ES_SERVER_URLS
          value: "http://elasticsearch.observability.svc.cluster.local:9200"
        - name: ES_INDEX_PREFIX
          value: "jaeger"
        - name: QUERY_BASE_PATH
          value: "/jaeger"
        resources:
          requests:
            memory: 512Mi
            cpu: 250m
          limits:
            memory: 1Gi
            cpu: 500m
        volumeMounts:
        - name: jaeger-ui-config
          mountPath: /etc/jaeger
        livenessProbe:
          httpGet:
            path: /
            port: 16687
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 16687
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: jaeger-ui-config
        configMap:
          name: jaeger-ui-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jaeger-ui-config
  namespace: observability
data:
  ui-config.json: |
    {
      "monitor": {
        "menuEnabled": true
      },
      "dependencies": {
        "menuEnabled": true
      },
      "archiveEnabled": true,
      "tracking": {
        "gaID": "UA-000000-2",
        "trackErrors": true
      },
      "menu": [
        {
          "label": "ARES ChronoFabric",
          "url": "https://ares-systems.com",
          "newWindow": true
        },
        {
          "label": "Quantum Operations Dashboard",
          "url": "/grafana/d/quantum-ops",
          "newWindow": false
        },
        {
          "label": "Temporal Analysis",
          "url": "/grafana/d/temporal-analysis",
          "newWindow": false
        }
      ],
      "linkPatterns": [
        {
          "type": "process",
          "key": "service.name",
          "url": "https://grafana.ares-internal.com/explore?orgId=1&left={\"datasource\":\"prometheus\",\"queries\":[{\"expr\":\"rate(http_requests_total{service=\\\"#service.name\\\"}[5m])\"}],\"range\":{\"from\":\"now-1h\",\"to\":\"now\"}}",
          "text": "View service metrics in Grafana"
        },
        {
          "type": "tags",
          "key": "quantum.operation_id",
          "url": "/quantum-analyzer?operation_id=#quantum.operation_id",
          "text": "Analyze quantum operation"
        }
      ]
    }
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-collector
  namespace: observability
  labels:
    app: jaeger
    component: collector
spec:
  type: ClusterIP
  ports:
  - name: thrift-http
    port: 14268
    targetPort: 14268
  - name: grpc
    port: 14250
    targetPort: 14250
  - name: zipkin
    port: 9411
    targetPort: 9411
  - name: otlp-grpc
    port: 4317
    targetPort: 4317
  - name: otlp-http
    port: 4318
    targetPort: 4318
  selector:
    app: jaeger
    component: collector
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-query
  namespace: observability
  labels:
    app: jaeger
    component: query
spec:
  type: LoadBalancer
  ports:
  - name: query
    port: 16686
    targetPort: 16686
  - name: admin
    port: 16687
    targetPort: 16687
  selector:
    app: jaeger
    component: query
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jaeger-ingress
  namespace: observability
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: SAMEORIGIN";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
spec:
  tls:
  - hosts:
    - observability.ares-internal.com
    secretName: jaeger-tls
  rules:
  - host: observability.ares-internal.com
    http:
      paths:
      - path: /jaeger(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: jaeger-query
            port:
              number: 16686
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jaeger
  namespace: observability
  labels:
    app: jaeger
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: jaeger
  labels:
    app: jaeger
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: jaeger
  labels:
    app: jaeger
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: jaeger
subjects:
- kind: ServiceAccount
  name: jaeger
  namespace: observability
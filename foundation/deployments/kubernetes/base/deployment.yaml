apiVersion: apps/v1
kind: Deployment
metadata:
  name: ares-csf
  labels:
    app: ares-csf
    component: core
    version: v0.1.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ares-csf
  template:
    metadata:
      labels:
        app: ares-csf
        component: core
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: ares-csf
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: ares-csf
        image: aressystems/csf:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: api
          containerPort: 8080
          protocol: TCP
        - name: network
          containerPort: 9000
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        - name: otlp
          containerPort: 4317
          protocol: TCP
        env:
        - name: CSF_NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CSF_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: CSF_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: RUST_LOG
          value: "info"
        - name: CSF_DEPLOYMENT
          value: "kubernetes"
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "8Gi"
            cpu: "4000m"
        livenessProbe:
          httpGet:
            path: /health
            port: api
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: api
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: config
          mountPath: /etc/ares-csf
          readOnly: true
        - name: data
          mountPath: /var/lib/ares-csf
        - name: logs
          mountPath: /var/log/ares-csf
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config
        configMap:
          name: ares-csf-config
      - name: data
        persistentVolumeClaim:
          claimName: ares-csf-data
      - name: logs
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - ares-csf
              topologyKey: kubernetes.io/hostname
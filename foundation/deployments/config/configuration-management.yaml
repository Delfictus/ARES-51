apiVersion: v1
kind: ConfigMap
metadata:
  name: ares-config-management
  namespace: ares-system
data:
  config-manager.yaml: |
    # ARES Enterprise Configuration Management
    server:
      host: "0.0.0.0"
      port: 8090
      tls_enabled: true
      cert_path: "/etc/certs/tls.crt"
      key_path: "/etc/certs/tls.key"
    
    storage:
      primary: "etcd"
      backup: "consul"
      local_cache: true
      cache_ttl: "5m"
      
    etcd:
      endpoints:
      - "etcd-0.etcd.ares-system.svc.cluster.local:2379"
      - "etcd-1.etcd.ares-system.svc.cluster.local:2379"
      - "etcd-2.etcd.ares-system.svc.cluster.local:2379"
      username: "ares-config"
      password_secret: "etcd-credentials"
      tls_enabled: true
      ca_cert: "/etc/etcd-certs/ca.crt"
      client_cert: "/etc/etcd-certs/client.crt"
      client_key: "/etc/etcd-certs/client.key"
      
    consul:
      address: "consul.ares-system.svc.cluster.local:8500"
      datacenter: "ares-dc1"
      token_secret: "consul-credentials"
      tls_enabled: true
      ca_cert: "/etc/consul-certs/ca.crt"
      
    encryption:
      algorithm: "AES-256-GCM"
      key_rotation_interval: "24h"
      quantum_resistant: true
      post_quantum_migration: "kyber1024"
      
    environments:
      development:
        encryption_required: false
        versioning_enabled: true
        audit_level: "basic"
        quantum_security_level: "basic"
        
      staging:
        encryption_required: true
        versioning_enabled: true
        audit_level: "enhanced"
        quantum_security_level: "enhanced"
        
      production:
        encryption_required: true
        versioning_enabled: true
        audit_level: "comprehensive"
        quantum_security_level: "quantum_resistant"
        backup_enabled: true
        backup_interval: "1h"
        
    quantum_validation:
      coherence_minimum: 0.95
      entanglement_threshold: 0.85
      gate_sequence_validation: true
      superposition_state_validation: true
      decoherence_detection: true
      
    temporal_validation:
      femtosecond_precision_minimum: 1000
      causality_validation: true
      bootstrap_paradox_prevention: true
      temporal_drift_threshold: 100.0
      temporal_window_validation: true
      
    audit:
      enabled: true
      retention_days: 365
      log_level: "info"
      quantum_signatures: true
      temporal_correlation: true
      export_formats: ["json", "csv", "parquet"]
      
    monitoring:
      metrics_enabled: true
      health_check_interval: "30s"
      performance_profiling: true
      quantum_monitoring: true
      temporal_monitoring: true

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ares-config-manager
  namespace: ares-system
  labels:
    app: ares-config-manager
    component: configuration
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ares-config-manager
  template:
    metadata:
      labels:
        app: ares-config-manager
        component: configuration
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8091"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: ares-config-manager
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: config-manager
        image: ares/config-manager:latest
        ports:
        - containerPort: 8090
          name: http
        - containerPort: 8091
          name: metrics
        env:
        - name: CONFIG_PATH
          value: "/etc/config/config-manager.yaml"
        - name: RUST_LOG
          value: "info,ares_config_manager=debug"
        - name: QUANTUM_MODE
          value: "enterprise"
        - name: TEMPORAL_PRECISION
          value: "femtosecond"
        resources:
          requests:
            memory: 512Mi
            cpu: 250m
          limits:
            memory: 1Gi
            cpu: 500m
        volumeMounts:
        - name: config
          mountPath: /etc/config
        - name: tls-certs
          mountPath: /etc/certs
        - name: etcd-certs
          mountPath: /etc/etcd-certs
        - name: consul-certs
          mountPath: /etc/consul-certs
        - name: data
          mountPath: /var/lib/ares-config
        livenessProbe:
          httpGet:
            path: /health
            port: 8090
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /ready
            port: 8090
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
      volumes:
      - name: config
        configMap:
          name: ares-config-management
          items:
          - key: config-manager.yaml
            path: config-manager.yaml
      - name: tls-certs
        secret:
          secretName: ares-config-manager-tls
      - name: etcd-certs
        secret:
          secretName: etcd-client-certs
      - name: consul-certs
        secret:
          secretName: consul-client-certs
      - name: data
        persistentVolumeClaim:
          claimName: ares-config-manager-data

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ares-config-manager-data
  namespace: ares-system
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: fast-ssd
  resources:
    requests:
      storage: 10Gi

---
apiVersion: v1
kind: Service
metadata:
  name: ares-config-manager
  namespace: ares-system
  labels:
    app: ares-config-manager
spec:
  type: ClusterIP
  ports:
  - port: 8090
    targetPort: 8090
    name: http
  - port: 8091
    targetPort: 8091
    name: metrics
  selector:
    app: ares-config-manager

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ares-config-manager
  namespace: ares-system
  labels:
    app: ares-config-manager

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ares-config-manager
  labels:
    app: ares-config-manager
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets"]
  verbs: ["get", "list", "watch", "update", "patch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ares-config-manager
  labels:
    app: ares-config-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ares-config-manager
subjects:
- kind: ServiceAccount
  name: ares-config-manager
  namespace: ares-system

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: ares-config-manager
  namespace: ares-system
  labels:
    app: ares-config-manager
spec:
  selector:
    matchLabels:
      app: ares-config-manager
  endpoints:
  - port: metrics
    interval: 15s
    path: /metrics
    honorLabels: true
    metricRelabelings:
    - sourceLabels: [__name__]
      regex: 'ares_config_.*'
      targetLabel: __name__
      replacement: '${1}'

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ares-config-manager-network-policy
  namespace: ares-system
spec:
  podSelector:
    matchLabels:
      app: ares-config-manager
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ares-system
    - namespaceSelector:
        matchLabels:
          name: observability
    ports:
    - protocol: TCP
      port: 8090
    - protocol: TCP
      port: 8091
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: ares-system
    ports:
    - protocol: TCP
      port: 2379  # etcd
    - protocol: TCP
      port: 8500  # consul
  - to: []
    ports:
    - protocol: TCP
      port: 53   # DNS
    - protocol: UDP
      port: 53   # DNS
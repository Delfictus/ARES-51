version: '3.8'

services:
  # Main CSF node
  csf-node-1:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    image: ares-csf:latest
    container_name: ares-csf-node-1
    hostname: csf-node-1
    environment:
      - RUST_LOG=info
      - CSF_NODE_ID=node-1
      - CSF_METRICS_ENABLED=true
    ports:
      - "8080:8080"   # API
      - "9000:9000"   # Network
      - "9090:9090"   # Metrics
    volumes:
      - csf-data-1:/var/lib/ares-csf
      - csf-logs-1:/var/log/ares-csf
      - ./config/docker.toml:/etc/ares-csf/config.toml:ro
    networks:
      - csf-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G
        reservations:
          cpus: '2'
          memory: 4G

  # Additional CSF nodes for distributed setup
  csf-node-2:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    image: ares-csf:latest
    container_name: ares-csf-node-2
    hostname: csf-node-2
    environment:
      - RUST_LOG=info
      - CSF_NODE_ID=node-2
      - CSF_METRICS_ENABLED=true
      - CSF_PEER_NODES=csf-node-1:9000
    ports:
      - "8081:8080"
      - "9001:9000"
      - "9091:9090"
    volumes:
      - csf-data-2:/var/lib/ares-csf
      - csf-logs-2:/var/log/ares-csf
      - ./config/docker.toml:/etc/ares-csf/config.toml:ro
    networks:
      - csf-network
    depends_on:
      - csf-node-1
    restart: unless-stopped

  csf-node-3:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    image: ares-csf:latest
    container_name: ares-csf-node-3
    hostname: csf-node-3
    environment:
      - RUST_LOG=info
      - CSF_NODE_ID=node-3
      - CSF_METRICS_ENABLED=true
      - CSF_PEER_NODES=csf-node-1:9000,csf-node-2:9000
    ports:
      - "8082:8080"
      - "9002:9000"
      - "9092:9090"
    volumes:
      - csf-data-3:/var/lib/ares-csf
      - csf-logs-3:/var/log/ares-csf
      - ./config/docker.toml:/etc/ares-csf/config.toml:ro
    networks:
      - csf-network
    depends_on:
      - csf-node-1
      - csf-node-2
    restart: unless-stopped

  # Development environment
  csf-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    image: ares-csf:dev
    container_name: ares-csf-dev
    volumes:
      - .:/workspace:cached
      - cargo-cache:/usr/local/cargo/registry
      - cargo-git:/usr/local/cargo/git
      - target-cache:/workspace/target
    networks:
      - csf-network
    stdin_open: true
    tty: true
    profiles:
      - development

  # Monitoring stack
  prometheus:
    image: prom/prometheus:latest
    container_name: csf-prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9093:9090"
    networks:
      - csf-network
    restart: unless-stopped
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: csf-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
      - grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - csf-network
    depends_on:
      - prometheus
    restart: unless-stopped
    profiles:
      - monitoring

  # Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: csf-jaeger
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686"  # Jaeger UI
      - "4317:4317"    # OTLP gRPC
      - "4318:4318"    # OTLP HTTP
    networks:
      - csf-network
    restart: unless-stopped
    profiles:
      - monitoring

  # Redis for caching/state (optional)
  redis:
    image: redis:7-alpine
    container_name: csf-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - csf-network
    restart: unless-stopped
    profiles:
      - cache

  # PostgreSQL for persistent storage (optional)
  postgres:
    image: postgres:16-alpine
    container_name: csf-postgres
    environment:
      - POSTGRES_DB=ares_csf
      - POSTGRES_USER=ares
      - POSTGRES_PASSWORD=changeme
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - csf-network
    restart: unless-stopped
    profiles:
      - database

networks:
  csf-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  # CSF node data
  csf-data-1:
  csf-data-2:
  csf-data-3:
  csf-logs-1:
  csf-logs-2:
  csf-logs-3:
  
  # Development caches
  cargo-cache:
  cargo-git:
  target-cache:
  
  # Monitoring data
  prometheus-data:
  grafana-data:
  
  # Optional services
  redis-data:
  postgres-data:
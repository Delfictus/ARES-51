# ARES ChronoSynclastic Fabric - Production Monitoring Stack
# Validates sub-microsecond claims with comprehensive observability

version: '3.8'

services:
  # Prometheus - Time series database and alerting
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: csf-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./alerts:/etc/prometheus/alerts:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--storage.tsdb.retention.time=30d'
      - '--storage.tsdb.retention.size=10GB'
    networks:
      - csf-monitoring

  # Grafana - Visualization and dashboards
  grafana:
    image: grafana/grafana:10.0.0
    container_name: csf-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=ares-csf-proof-of-power
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
    networks:
      - csf-monitoring
    depends_on:
      - prometheus

  # AlertManager - Alert routing and management
  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: csf-alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    networks:
      - csf-monitoring

  # Node Exporter - System metrics
  node-exporter:
    image: prom/node-exporter:v1.6.0
    container_name: csf-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - csf-monitoring

  # NVIDIA GPU Exporter (for hardware acceleration monitoring)
  nvidia-gpu-exporter:
    image: utkuozdemir/nvidia_gpu_exporter:1.1.0
    container_name: csf-gpu-exporter
    ports:
      - "9445:9445"
    volumes:
      - /usr/lib/x86_64-linux-gnu/libnvidia-ml.so:/usr/lib/x86_64-linux-gnu/libnvidia-ml.so:ro
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    networks:
      - csf-monitoring
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  # Jaeger - Distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:1.46
    container_name: csf-jaeger
    ports:
      - "16686:16686"  # Jaeger UI
      - "14268:14268"  # HTTP endpoint for spans
      - "6831:6831/udp"  # UDP endpoint for spans
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - csf-monitoring

  # CSF Metrics Aggregator (custom service for ARES-specific metrics)
  csf-metrics-aggregator:
    build:
      context: ../
      dockerfile: monitoring/Dockerfile.metrics-aggregator
    container_name: csf-metrics-aggregator
    ports:
      - "8087:8087"
    environment:
      - RUST_LOG=info
      - CSF_METRICS_BIND=0.0.0.0:8087
      - PROMETHEUS_ENDPOINT=http://prometheus:9090
    networks:
      - csf-monitoring
    depends_on:
      - prometheus

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  alertmanager_data:
    driver: local

networks:
  csf-monitoring:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24
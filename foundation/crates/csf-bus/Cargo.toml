[package]
name = "csf-bus"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
documentation.workspace = true

[dependencies]
# Protocol layer - canonical packet definitions  
csf-protocol = { path = "../csf-protocol" }

# Foundation (already implemented)
csf-core = { path = "../csf-core", features = ["net"] }
csf-time = { path = "../csf-time" }  # Use for all timing

# Performance optimization
crossbeam = "0.8"         # Lock-free data structures
dashmap = "5.5"           # Concurrent hash maps
bytes = "1.5"             # Zero-copy buffers
parking_lot = "0.12"      # Fast synchronization

# Hardware acceleration
rayon = "1.8"             # Parallel processing
simd-json = "0.13"        # SIMD JSON processing

# Mathematical operations for DRPP
nalgebra = { version = "0.33", features = ["serde-serialize"] }         # Linear algebra for energy functionals

# Concurrency and async
tokio = { workspace = true, features = ["sync", "time"] }
async-trait.workspace = true
futures = { workspace = true }

# Observability
tracing = "0.1"           # Distributed tracing
metrics = "0.21"          # Prometheus metrics
once_cell = "1.19"        # Static initialization

# Error handling
thiserror.workspace = true
anyhow = { workspace = true }

# Serialization and Data
serde = { workspace = true }
bincode = { workspace = true }
uuid = { workspace = true }

[dev-dependencies]
csf-time = { path = "../csf-time", features = ["testing"] }
tokio = { workspace = true, features = ["macros", "rt-multi-thread"] }
serde = { workspace = true, features = ["derive"] }
tracing-subscriber = { workspace = true }
futures.workspace = true

# Testing
proptest = "1.3"          # Property-based testing
criterion = "0.5"         # Benchmarking

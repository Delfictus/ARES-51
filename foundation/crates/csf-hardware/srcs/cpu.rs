// ... existing code ...
use core::arch::x86_64::{_rdtsc}; // Removed _rdtscp as it's not available or needed here
// ... existing code ...

// in function set_thread_affinity
use nix::sched::{sched_setaffinity, CpuSet};
use nix::unistd::Pid;
// ... existing code ...

// in function set_scheduler_policy
use nix::sched::{sched_setscheduler, SchedPolicy};
// ... existing code ...

// in function get_cache_sizes
use raw_cpuid::{CpuId, CpuIdReader};

fn get_cache_sizes(cpuid: &CpuId<impl CpuIdReader>) -> Result<crate::CacheSizes> {
    // ... function implementation ...
}

// ... existing code ...

// in function check_avx_support
// ...
        if !extended_features.has_adx() { // Corrected has_avx to has_adx, assuming a typo based on compiler suggestion
            return Ok(false);
        }
// ... existing code ...

// in MemoryManager
// ...
    allocations: parking_lot::RwLock<std::collections::HashMap<*mut u8, (Layout, MemoryRegion)>>,
// ...

// in NUMAAllocator
// ...
            regions: parking_lot::RwLock::new(Vec::new()),
// ...

# ARES ChronoFabric Development Guidelines

## Project Overview
This is the ARES ChronoFabric quantum temporal correlation system - a sophisticated Rust implementation of quantum computing concepts for temporal data processing.

## Authorship Requirements

**CRITICAL**: All commits, documentation, and code contributions must be attributed solely to **Ididia Serfaty**.

### Git Configuration
- **Author**: Ididia Serfaty
- **Email**: ididiaserfaty@protonmail.com (GitHub commits)
- **Business Contact**: IS@delfictus.com (documentation only)

### AI Reference Policy
**STRICTLY PROHIBITED** in any commits, documentation, or code:
- References to Claude, Anthropic, or any AI assistance
- Automated generation notices
- Co-authorship with AI systems
- Any mention of artificial intelligence tools

### Enforcement
Automated git hooks are in place to:
- Remove AI references from commit messages
- Ensure proper authorship attribution
- Maintain clean commit history

## Development Status

### Completed Tasks
- [x] Circular dependency resolution (csf-core ↔ csf-time)
- [x] Integration test compilation fixes (55+ → 31 errors)
- [x] Tensor API implementation (mathematical operations)
- [x] Git configuration and backup automation
- [x] Shared types extraction (csf-shared-types crate)

### Critical Tasks Remaining
- [ ] Functional validation framework restoration
- [ ] csf-ffi build script fixes
- [ ] Full workspace compilation
- [ ] Compilation warnings cleanup

## Technical Architecture

### Core Components
- **csf-core**: Core tensor operations and quantum calculations
- **csf-time**: High-precision temporal operations
- **csf-shared-types**: Common types to break circular dependencies
- **csf-ffi**: Foreign function interface
- **csf-bus**: Communication bus system

### Build System
```bash
# Full workspace build
cargo build --workspace

# Individual crate testing
cargo test -p csf-core
cargo test -p csf-time

# Lint and type checking
cargo clippy --workspace
cargo check --workspace
```

### Performance Targets
- Femtosecond-level precision for temporal calculations
- Sub-microsecond response times for quantum operations
- 99%+ coherence maintenance in quantum states
- Memory-efficient tensor operations for large datasets

## File Structure
```
crates/
├── csf-core/           # Core quantum tensor operations
├── csf-time/           # Temporal precision management
├── csf-shared-types/   # Common type definitions
├── csf-ffi/            # Foreign function interfaces
└── csf-bus/            # System communication
```

## Testing Strategy
- Integration tests for cross-crate functionality
- Unit tests for mathematical precision
- Performance benchmarks for quantum operations
- Validation tests for temporal accuracy

---
**Project**: ARES ChronoFabric System  
**Author**: Ididia Serfaty  
**Contact**: IS@delfictus.com